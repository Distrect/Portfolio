@import "./root.scss";

.button {
  display: flex;
  align-items: center;
  gap: 0.5ch;
  appearance: none;
  flex-shrink: 0;
  white-space: nowrap;
  width: min-content;

  cursor: pointer;

  font-family: inherit;
  font-size: 1rem;
  font-weight: 600;

  padding: 0.75ch 1.25ch;

  border: none;
  border-radius: 6px;

  color: #000000;
  background-color: #ffffff;

  transition: color 0.4s, border-color 0.4s, background-color 0.4s;
}

.button[button-type="dynamic"]:disabled {
  background-color: $gray-300;
}

.button[button-type="dynamic"]:disabled.outlined {
  cursor: default;
  color: $gray-500;
  border-color: $gray-300;

  &:hover {
    color: $gray-500;
    background-color: transparent;
    border-color: $gray-300;
  }

  &:active {
    color: $gray-500;
    border-color: $gray-300;
  }
}

.button[button-type="dynamic"].outlined {
  background-color: transparent;
  color: $selected-color;
  border: 3px solid $selected-color;
}

.button[button-type="dynamic"].outlined svg path {
  fill: $selected;
}

.button[button-type="dynamic"] {
  color: $white;
  background-color: $selected-color;
}

.button[button-type="dynamic"] svg path {
  fill: $white;
}

@each $color-name, $color-value in $accent-colors {
  .button[button-type="#{$color-name}"] {
    color: $white;
    background-color: $color-value;
    border-width: 3px;
    border-style: solid;
    border-color: $color-value;
  }

  .button[button-type="#{$color-name}"]:disabled {
    cursor: default;
    background-color: $gray-300;
    color: $gray-500;
    border-color: $gray-300;

    &:hover {
      background-color: $gray-300;
      color: $gray-500;
      border-color: $gray-300;
    }

    &:active {
      background-color: $gray-300;
      color: $gray-500;
      border-color: $gray-300;
    }
  }

  .button[button-type="#{$color-name}"].outlined {
    color: $color-value;
    background-color: transparent;
    border: 3px solid $color-value;
  }
}

.button.small-btn,
.button.outlined.small-btn {
  font-size: 0.75rem;
  border-width: 2px;
}

.button.medium-btn,
.button.outlined.medium-btn {
  font-size: 0.875rem;
  border-width: 2px;
}

.button[color="red"].outlined {
  color: $accent-red;
  border-color: $accent-red;
}
.button[color="green"].outlined {
  color: $accent-green;
  border-color: $accent-green;
}

.button .text-container {
  flex-grow: 1;
  width: fit-content;
}

.button .icon-container {
  width: 1rem;
  height: 1rem;
  overflow: hidden;
}

.button .icon-container > * {
  width: 1rem !important;
  height: 100% !important;
  overflow: hidden;
}

.button .icon-container:empty {
  display: none;
}

.icon-button {
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (hover: hover) and (pointer: fine) {
  .button[button-type="dynamic"]:hover {
    background-color: lighten($selected-color, 10%);
  }

  .button[button-type="dynamic"]:active {
    background-color: darken($selected-color, 10%);
  }

  .button[button-type="dynamic"].outlined:hover {
    background-color: $selected-color;
    color: $white;
  }

  .button[button-type="dynamic"].outlined:hover svg path {
    fill: $white;
  }

  .button[button-type="dynamic"].outlined:active {
    $darked-color: darken($selected, 10%);
    border-color: $darked-color;
    background-color: $darked-color;
  }

  @each $color-name, $color-value in $accent-colors {
    .button[button-type="#{$color-name}"]:hover {
      color: $white;
      background-color: lighten($color-value, 10%);
      border-color: lighten($color-value, 10%);
    }

    .button[button-type="#{$color-name}"]:active {
      color: $white;
      background-color: darken($color-value, 10%);
      border-color: darken($color-value, 10%);
    }

    .button[button-type="#{$color-name}"].outlined:hover {
      color: $white;
      background-color: $color-value;
      border: 3px solid $color-value;
    }

    .button[button-type="#{$color-name}"].outlined:active {
      $darked-color: darken($color-value, 10%);
      color: $white;
      background-color: $darked-color;
      border: 3px solid $darked-color;
    }
  }
}

@media screen and (max-width: 576px) {
  .button {
    font-size: 0.875rem;
    padding: 0.7ch 1.2ch;
  }
}

/* button,
  a.btn {
    position: relative;
    cursor: pointer;
    appearance: none;
    outline: none;
    border: none !important;
    font-size: 0.875rem;
    font-weight: 500;
    width: fit-content;
    padding-inline: 1.5ch;
    padding-block: 1ch;
    border-radius: 2px;
    border: 2px solid $gray-100);
    color: $black);
    overflow: hidden;
    background-color: $white;
    transition-property: color, background-color, transform;
    transition-duration: 0.3s, 0.2s, 0.1s;
    transition-timing-function: ease-in-out;
  }
  
  button.color-button,
  a.color-button {
    background-color: $selected-color;
    color: seashell;
  }
  
  @media (hover: hover) and (pointer: coarse) {
    button.fixed-button:active,
    a.fixed-button:active,
    button.color-button:active,
    a.color-button:active {
      transform: scale(1.05);
    }
  }
  
  @media (hover: hover) and (pointer: fine) {
    button,
    a.btn {
      outline: 2px solid transparent;
      outline-offset: 2px;
      transition: transform 0.1s, background-color 0.1s, outline 0.1s;
    }
  
    button.fixed-button:hover,
    a.fixed-button:hover {
      outline-color: $gray-50);
      background-color: $gray-200);
    }
  
    button.color-button:hover,
    a.color-button:hover {
      outline-color: $area-item-border-color);
    }
  
    button.fixed-button:active,
    a.fixed-button:active,
    button.color-button:active,
    a.color-button:active {
      transform: scale(1.05);
    }
  } */
