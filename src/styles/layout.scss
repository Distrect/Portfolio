@use "sass:math";
@import "./root.scss";
@import "./typography.scss";

$gaps: (
  1: math.div($font-size, 2),
  2: $font-size,
  3: $font-size * 2,
  4: $font-size * 4,
);

$breakpoints: (
  xs: (
    col: repeat(4, 1fr),
    val: 320px,
  ),
  s: (
    col: repeat(4, 1fr),
    val: 380px,
  ),
  m: (
    col: repeat(4, 1fr),
    val: 423px,
  ),
  l: (
    col: repeat(4, 1fr),
    val: 576px,
    limit: 540px,
  ),
  xl: (
    col: repeat(8, 1fr),
    val: 768px,
    limi t: 820px,
  ),
  xxl: (
    col: repeat(12, 1fr),
    val: 1000px,
    limit: 1250px,
  ),
);

.layout {
  display: grid;
  gap: map-get($gaps, "1");
  padding-inline: 16px;
}

.section-limiter {
  margin-inline: auto;
}

@each $num, $gap in $gaps {
  .layout-gap-#{$num},
  .layout .layout-gap-#{$num} {
    row-gap: $gap;
    column-gap: $gap;
  }
}

@each $break-name, $val in $breakpoints {
  $breakpoint: map-get($breakpoints, #{$break-name});

  $grid-col: map-get($breakpoint, "col");
  $device-size: map-get($breakpoint, "val");
  $max-width: map-get($breakpoint, "limit");

  .layout-col,
  .layout.layout-col-#{$break-name} {
    grid-template-columns: $grid-col;
    min-width: $device-size;
  }

  @media screen and (min-width: $device-size) {
    .layout {
      grid-template-columns: $grid-col;
      row-gap: $font-size;
    }

    .layout.section-limiter {
      @if $max-width !=null {
        max-width: $max-width;
      }
    }
  }
}
